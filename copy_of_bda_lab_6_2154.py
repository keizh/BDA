# -*- coding: utf-8 -*-
"""Copy of BDA_LAB_6_2154.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jT29nA5s5zvTzwu-TVmqJBDHJbNqOGT1

###**PAGE RANK**
"""

import pandas as pd
import networkx as nx
import numpy as np
import matplotlib.pyplot as plt
import operator 
import random as rd

graph = nx.gnp_random_graph(25,0.6,directed = True)

nx.draw(graph,with_labels = True,font_color ='black',font_size = 10,node_color = 'red')
plt.show()

import networkx as nx
import random
import numpy as np

# Add directed edges in graph
def add_edges(g, pr):
  for each in g. nodes():    
    for eachl in g. nodes():
      if (each != eachl):
        ra = random. random()
        if (ra < pr):
            g.add_edge(each,eachl)
        else:
            continue
  return g

# Sort the nodes
def nodes_sorted(g, points):
    t = np.array(points)
    t = np.argsort(-t)
    return t

# Distribute points randomly in a graph
def random_Walk(g):
  rwp = [ 0 for i in range(g. number_of_nodes())]
  nodes = list(g.nodes())
  r = random. choice(nodes)
  rwp[r] += 1 
  neigh = list(g.out_edges(r))
  z = 0
  while (z != 10000):
    if (len(neigh) == 0):
      focus = random.choice(nodes)
    else:
      rl = random. choice(neigh)
      focus = rl[1]
    rwp [focus] += 1
    neigh = list(g. out_edges(focus))
    z  += 1
  return rwp

g = nx.DiGraph()
N = 15
g.add_nodes_from(range(N))
g = add_edges(g, 0.4)

points = random_Walk(g)

sorted_by_points = nodes_sorted(g, points)
print("PageRank using Random Walk Method")
print(sorted_by_points)

p_dict = nx.pagerank(g)
p_sort = sorted(p_dict.items(), key= lambda x: x[1], reverse =True)

print( "PageRank using inbuilt pagerank method" )
for i in p_sort:
  print(i[0], end=",")

"""###**TEXT RANK**"""

!pip install pytextrank

import spacy
import pytextrank
from tabulate import tabulate

document = '''Not only did it only confirm that the film would be unfunny and 
            generic, but italso managed to give away the ENTIRE movie;and I'm 
            not exaggerating - every moment, every plot point, every joke is 
            told in the trailer.'''

en_nlp = spacy.load("en_core_web_sm")
en_nlp. add_pipe("textrank")
doc = en_nlp(document)

tr = doc._.textrank
print(tr.elapsed_time);

for combination in doc._.phrases:  
  print(combination.text, combination.rank, combination.count)

tr = doc._.textrank
tr.plot_keyphrases()